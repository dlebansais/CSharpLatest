# version format
version: v{build}

branches:
  only:
    - master
    - deployment

# Skipping commits with particular message or from specific user
skip_commits:
  message: "*[skip ci]*"

image: Visual Studio 2022

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

environment:
  package_token:
    secure: oeB0vPa3ehegduJ/WnxLssnK6wiIc8MVx0lVYeiXKT6pIz9ZDQ4ioQ55g6GYz9dW
  opencover_version: 4.7.1221
  codecov_uploader_version: 0.7.1
  report_generator_version: 5.2.0
  PACKAGE_PREFIX: dlebansais

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.

before_build:
  - ps: (Get-Content nuget.config).replace('Insert token here', $env:package_token) | Set-Content nuget.config
  - nuget restore %APPVEYOR_PROJECT_NAME%.sln
  - nuget install GitCommitId -DependencyVersion Highest -OutputDirectory packages

configuration:
  - Debug
  - Release

build:
  project: $(APPVEYOR_PROJECT_NAME).sln

after_build:
  - ps: |-
        $xml = [xml](Get-Content .\$env:APPVEYOR_PROJECT_NAME.Analyzers\$env:APPVEYOR_PROJECT_NAME.Analyzers.csproj)
  - ps: $version = $xml.Project.PropertyGroup.Version
  - ps: set version_tag v$version
  - ps: $version_tag = $version_tag.Trim()
  - ps: $env:VERSION_TAG = $version_tag
  - echo Version is "%VERSION_TAG%"

before_test:
  - nuget install OpenCover -Version %opencover_version% -OutputDirectory packages
  - nuget install CodecovUploader -Version %codecov_uploader_version% -OutputDirectory packages
  - nuget install ReportGenerator -Version %report_generator_version% -OutputDirectory packages
  - |-
    printf "dotnet test ./Test/%APPVEYOR_PROJECT_NAME%.Test/bin/%CONFIGURATION%/netcoreapp3.1/%APPVEYOR_PROJECT_NAME%.Test.dll -l console;verbosity=detailed\n" > runtests.bat
  - |-
    printf "@echo ************************************************************** Starting Tests..\n" > runtests1.bat
    printf "call runtests.bat\n" >> runtests1.bat
  - |-
    printf ".\packages\OpenCover.%opencover_version%\Tools\OpenCover.Console.exe -register:user -returntargetcode -target:\x25\x31 -mergeoutput -output:""Coverage-%APPVEYOR_PROJECT_NAME%"".xml\n" > opencover.bat
  - |-
    printf ".\packages\CodecovUploader.%codecov_uploader_version%\Tools\Codecov.exe -f ""Coverage-%APPVEYOR_PROJECT_NAME%.xml""\n" > after-test.bat
    printf ".\packages\ReportGenerator.%report_generator_version%\Tools\Net8.0\ReportGenerator.exe ""-reports:Coverage-%APPVEYOR_PROJECT_NAME%.xml"" -targetdir:.\CoverageReports ""-assemblyfilters:-Microsoft*;+%APPVEYOR_PROJECT_NAME%.Analyzers;+%APPVEYOR_PROJECT_NAME%.CodeFixes"" ""-filefilters:-*.g.cs"" -reporttypes:textsummary\n" >> after-test.bat
    printf "powershell $summary = Get-Content .\CoverageReports\Summary.txt -Raw ; Write-Output $summary ; $pattern = 'Branch coverage' + [char]0x003A + ' 100' + [char]0x0025 ; if ($summary -NotMatch $pattern) { exit -1 }\n" >> after-test.bat

test_script:
  - if '%APPVEYOR_REPO_BRANCH%' == 'master' opencover.bat runtests1.bat

after_test:
  - if '%APPVEYOR_REPO_BRANCH%' == 'master' after-test.bat

artifacts:
  - path: $(APPVEYOR_PROJECT_NAME).Package\bin\Release\$(PACKAGE_PREFIX).$(APPVEYOR_PROJECT_NAME).*.nupkg
    name: $(APPVEYOR_PROJECT_NAME)-Package-Release
    type: NuGetPackage

deploy:
  - provider: NuGet
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Release
    skip_symbols: true
    api_key:
      secure: uWTgpdAmDlZwb4//7sBgzFwN0HGnNCKpVUyRl2V7HPznoSDaa6yBar/KE6jLDZl9
    on:
      branch: deployment
      configuration: Release
  - provider: NuGet
    server: https://nuget.pkg.github.com/dlebansais/index.json
    artifact: $(APPVEYOR_PROJECT_NAME)-Package-Release
    skip_symbols: true
    username: dlebansais
    api_key:
      secure: P1otXPxREK8T2L9vw4vpvvpXYlMyCTGa/iQIfuXtr4mjOFZBYR83Aie3hTZotfOu
    on:
      branch: deployment
      configuration: Release
